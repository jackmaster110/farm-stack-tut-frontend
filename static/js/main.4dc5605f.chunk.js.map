{"version":3,"sources":["components/AddTodo.tsx","components/Todo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["AddTodo","props","className","type","placeholder","onChange","changeTitle","changeDesc","onClick","submit","Todo","title","desc","checked","e","changeChecked","nanoid","TodoList","list","map","item","App","useState","todoList","setTodoList","setTitle","setDesc","useEffect","axios","get","process","then","res","data","event","newTodo","post","JSON","stringify","currentTarget","value","id","temp","tempIndex","forEach","i","put","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAmBeA,MAXf,SAAiBC,GACb,OACI,sBAAKC,UAAU,oCAAf,UACI,uBAAOC,KAAK,OAAOD,UAAU,QAAQE,YAAY,WAAWC,SAAUJ,EAAMK,cAC5E,0BAAUJ,UAAU,OAAOE,YAAY,iBAAiBC,SAAUJ,EAAMM,aAExE,wBAAQL,UAAU,SAASM,QAASP,EAAMQ,OAA1C,0BCWGC,MAZf,SAAcT,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,6BAAKD,EAAMU,QACX,+BAAOV,EAAMW,OACb,iCACI,uBAAOT,KAAK,WAAWU,QAASZ,EAAMY,QAASL,QAAS,SAACM,GAAD,OAAOb,EAAMc,cAAcD,EAAGb,EAAMe,iBCM7FC,MAbf,SAAkBhB,GACd,OACI,sBAAKC,UAAU,sBAAf,UACKD,EAAMiB,KAAKC,KAAI,SAACC,GACb,OACI,cAAC,EAAD,CAAMJ,OAAQI,EAAKJ,OAAQL,MAAOS,EAAKT,MAAOC,KAAMQ,EAAKR,KAAMC,QAASO,EAAKP,QAASE,cAAed,EAAMc,mBAGnH,cAAC,EAAD,CAAST,YAAaL,EAAMK,YAAaC,WAAYN,EAAMM,WAAYE,OAAQR,EAAMQ,aC6DlFY,MA3Ef,WACI,MAAgCC,mBAAqB,IAArD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAA0BF,mBAAiB,IAA3C,mBAAOX,EAAP,KAAcc,EAAd,KACA,EAAwBH,mBAAiB,IAAzC,mBAAOV,EAAP,KAAac,EAAb,KAqDA,OAnDAC,qBAAU,WACNC,IACKC,IAAIC,8DACJC,MAAK,SAACC,GACHR,EAAYQ,EAAIC,WAEzB,IA8CC,sBAAK/B,UAAU,gBAAf,UACI,wBAAQA,UAAU,aAAlB,SACI,8CAEJ,qBAAKA,UAAU,UAAf,SACI,cAAC,EAAD,CACIO,OArBA,SAACyB,GACb,IAAIC,EAAoB,CACpBnB,OAAQA,cACRL,MAAOA,EACPC,KAAMA,EACNC,SAAS,GAEbW,EAAY,GAAD,mBAAKD,GAAL,CAAeY,KAC1BP,IAAMQ,KACFN,6DACAO,KAAKC,UAAUH,KAYP5B,WA/CG,SAAC2B,GAChBR,EAAQQ,EAAMK,cAAcC,QA+ChBlC,YApDI,SAAC4B,GACjBT,EAASS,EAAMK,cAAcC,QAoDjBtB,KAAMK,EACNR,cA9CM,SAClBmB,EACAO,GAEA,IAAIC,EAAI,YAAOnB,GACXoB,EAAY,EAChBD,EAAKE,SAAQ,SAACxB,EAAMyB,GACZzB,EAAKJ,SAAWyB,IAChBrB,EAAKP,SAAWO,EAAKP,QACrB8B,EAAYE,MAGpBrB,EAAYkB,GACZ,IAAItB,EAAOG,EAASoB,GACpBf,IAAMkB,IACFhB,gDAAA,2BACwBV,EAAKJ,QACzB,CAAEA,OAAQI,EAAKJ,OAAQL,MAAOS,EAAKT,MAAOC,KAAMQ,EAAKR,KAAMC,QAASO,EAAKP,mBCxCzFkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4dc5605f.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface AddTodoProps {\n    submit: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    changeTitle: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    changeDesc: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\n\nfunction AddTodo(props: AddTodoProps) {\n    return(\n        <div className=\"todo-container add-todo-container\">\n            <input type=\"text\" className=\"title\" placeholder=\"Title...\" onChange={props.changeTitle} />\n            <textarea className=\"desc\" placeholder=\"Description...\" onChange={props.changeDesc}>\n            </textarea>\n            <button className=\"submit\" onClick={props.submit}>Add Todo</button>\n        </div>\n    );\n}\n\nexport default AddTodo;","import React from \"react\";\n\nexport type TodoType = {\n    nanoid: string;\n    title: string;\n    desc: string;\n    checked: boolean;\n}\n\ninterface TodoProps extends TodoType {\n    changeChecked: (event: React.MouseEvent<HTMLInputElement>, nanoid: string) => void;\n}\n\nfunction Todo(props: TodoProps) {\n    return(\n        <div className=\"todo-container\">\n            <h1>{props.title}</h1>\n            <span>{props.desc}</span>\n            <footer>\n                <input type=\"checkbox\" checked={props.checked} onClick={(e) => props.changeChecked(e, props.nanoid)} />\n            </footer>\n        </div>\n    );\n}\n\nexport default Todo;","import React from \"react\";\nimport AddTodo from \"./AddTodo\";\nimport Todo, { TodoType } from \"./Todo\";\n\ninterface TodoListProps {\n    list: TodoType[]\n    changeChecked: (event: React.MouseEvent<HTMLInputElement>, nanoid: string) => void;\n    changeTitle: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    changeDesc: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n    submit: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nfunction TodoList(props: TodoListProps) {\n    return(\n        <div className=\"todo-list-container\">\n            {props.list.map((item) => {\n                return(\n                    <Todo nanoid={item.nanoid} title={item.title} desc={item.desc} checked={item.checked} changeChecked={props.changeChecked} /> \n                );\n            })}\n            <AddTodo changeTitle={props.changeTitle} changeDesc={props.changeDesc} submit={props.submit} />\n        </div>\n    );\n}\n\nexport default TodoList;","import axios from \"axios\";\nimport { nanoid } from \"nanoid\";\nimport React, { useEffect, useState } from \"react\";\nimport { TodoType } from \"./components/Todo\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n    const [todoList, setTodoList] = useState<TodoType[]>([]);\n\n    const [title, setTitle] = useState<string>(\"\");\n    const [desc, setDesc] = useState<string>(\"\");\n\n    useEffect(() => {\n        axios\n            .get(process.env.REACT_APP_BACKEND_URL + \"/api/get-todo\")\n            .then((res) => {\n                setTodoList(res.data);\n            });\n    }, []);\n\n    const changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(event.currentTarget.value);\n    };\n\n    const changeDesc = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setDesc(event.currentTarget.value);\n    };\n\n    const changeChecked = (\n        event: React.MouseEvent<HTMLInputElement>,\n        id: string\n    ) => {\n        let temp = [...todoList];\n        let tempIndex = 0;\n        temp.forEach((item, i) => {\n            if (item.nanoid === id) {\n                item.checked = !item.checked;\n                tempIndex = i;\n            }\n        });\n        setTodoList(temp);\n        let item = todoList[tempIndex];\n        axios.put(\n            process.env.REACT_APP_BACKEND_URL +\n                `/api/update-todo/${item.nanoid}`,\n                { nanoid: item.nanoid, title: item.title, desc: item.desc, checked: item.checked}\n        );\n    };\n\n    const addTodo = (event: React.MouseEvent<HTMLButtonElement>) => {\n        let newTodo: TodoType = {\n            nanoid: nanoid(),\n            title: title,\n            desc: desc,\n            checked: false,\n        };\n        setTodoList([...todoList, newTodo]);\n        axios.post(\n            process.env.REACT_APP_BACKEND_URL + \"/api/add-todo\",\n            JSON.stringify(newTodo)\n        );\n    };\n\n    return (\n        <div className=\"app-container\">\n            <header className=\"app-header\">\n                <h1>To-Do List</h1>\n            </header>\n            <div className=\"content\">\n                <TodoList\n                    submit={addTodo}\n                    changeDesc={changeDesc}\n                    changeTitle={changeTitle}\n                    list={todoList}\n                    changeChecked={changeChecked}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}